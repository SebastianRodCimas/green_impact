import 'package:flutter/material.dart';
import 'package:green_impact/src/generated.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class Questionnaire extends StatefulWidget {
  @override
  _QuestionnaireState createState() => _QuestionnaireState();
}

class _QuestionnaireState extends State<Questionnaire> {
  List<Autogenerated>? questions;
  Map<int, double> userResponses = {};

  @override
  void initState() {
    super.initState();
    // Ici, vous pouvez charger les questions depuis votre API ou une source de données
    // Par exemple, en utilisant http.get() pour récupérer les questions depuis un serveur.
    // Remplacez l'URL par celle de votre API.
    fetchQuestionsFromApi();
  }

  Future<void> fetchQuestionsFromApi() async {
    Map<String, String> header = {
      "Bearer":
          "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiQWRtaW4iLCJ1bmlxdWVfbmFtZSI6InJlbWkiLCJuYW1laWQiOiIxIiwiU2Vzc2lvbklkIjoiNTAxOGIwMWEtODQ4Ni00NTg2LTk2ZDUtYjRiOTAyYWUzNmE5IiwibmJmIjoxNjk4MzExMzk0LCJleHAiOjE2OTgzOTc3OTQsImlhdCI6MTY5ODMxMTM5NCwiaXNzIjoiUmV0YWlsZXJBcGkiLCJhdWQiOiJSZXRhaWxlckFwaSJ9.I3enJ2mA98GDqhOat3yr0J74BCwPqxjKYNWsr8IHe7U"
    };
    final response = await http.get(
        Uri.parse('https://localhost:5220/api/Products/GetAllQuestions'),
        headers: header);
    if (response.statusCode == 200) {
      final List<dynamic> jsonQuestions = json.decode(response.body);
      questions = jsonQuestions.map((q) => Autogenerated.fromJson(q)).toList();
      setState(() {});
    } else {
      throw Exception('Failed to load questions');
    }
  }

  void handleResponse(int questionId, double response) {
    setState(() {
      userResponses[questionId] = response;
    });
  }

  double calculateCarbonFootprint() {
    double totalScore = 0.0;
    userResponses.forEach((questionId, response) {
      final question = questions!.firstWhere((q) => q?.id == questionId);
      final answer = question.answers!.firstWhere((a) => a.score == response);
      totalScore += answer.score!;
    });
    return totalScore;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Questionnaire'),
      ),
      body: questions == null
          ? Center(child: CircularProgressIndicator())
          : ListView.builder(
              itemCount: questions!.length,
              itemBuilder: (context, index) {
                final question = questions![index];
                return Card(
                  margin: EdgeInsets.all(16.0),
                  child: Column(
                    children: [
                      Padding(
                        padding: EdgeInsets.all(16.0),
                        child: Text(
                          question.title ?? '',
                          style: TextStyle(fontSize: 18.0),
                        ),
                      ),
                      ListView.builder(
                        shrinkWrap: true,
                        physics: NeverScrollableScrollPhysics(),
                        itemCount: question.answers!.length,
                        itemBuilder: (context, ansIndex) {
                          final answer = question.answers![ansIndex];
                          return RadioListTile<double?>(
                            title: Text(answer.title ?? ''),
                            value: answer.score,
                            groupValue: userResponses[question.id],
                            onChanged: (double? value) {
                              handleResponse(question.id!, value!);
                            },
                          );
                        },
                      ),
                    ],
                  ),
                );
              },
            ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          final carbonFootprint = calculateCarbonFootprint();
          // Ici, vous pouvez afficher le résultat du calcul ou effectuer d'autres actions.
          // Par exemple, afficher un dialogue avec le résultat.
          showDialog(
            context: context,
            builder: (context) {
              return AlertDialog(
                title: Text('Résultat'),
                content:
                    Text('Votre empreinte carbone est de : $carbonFootprint'),
                actions: <Widget>[
                  TextButton(
                    child: Text('OK'),
                    onPressed: () {
                      Navigator.of(context).pop();
                    },
                  ),
                ],
              );
            },
          );
        },
        child: Icon(Icons.check),
      ),
    );
  }
}
